import java.util.Scanner;

            public class Main {
                public static void main(String[] args) {
                    boolean result = false; // Change to start with false
                    Scanner sc = new Scanner(System.in);
                    int n = sc.nextInt();
                    int[][] a = new int[n][n];
                    int[][] b = new int[n][n];
                    for (int i = 0; i < n; i++) {
                        for (int j = 0; j < n; j++) {
                            a[i][j] = sc.nextInt();
                        }
                    }
                    for (int i = 0; i < n; i++) {
                        for (int j = 0; j < n; j++) {
                            b[i][j] = sc.nextInt();
                        }
                    }

                    // Check for equivalence directly
                    if (arraysEqual(a, b)) {
                        result = true;
                    }
                    
                    // Check for all 90 degree rotations
                    if (!result && arraysEqual(rotate90Clockwise(a), b)) {
                        result = true;
                    }
                    
                    if (!result && arraysEqual(rotate180(a), b)) {
                        result = true;
                    }
                    
                    if (!result && arraysEqual(rotate270Clockwise(a), b)) {
                        result = true;
                    }

                    if (result) {
                        System.out.println("Yes");
                    } else {
                        System.out.println("No");
                    }
                    sc.close(); // Close the scanner, good practice
                }

                // Method to check if two matrices are equal
                private static boolean arraysEqual(int[][] a, int[][] b) {
                    int n = a.length;
                    for (int i = 0; i < n; i++) {
                        for (int j = 0; j < n; j++) {
                            if (a[i][j] != b[i][j]) {
                                return false;
                            }
                        }
                    }
                    return true;
                }

                private static int[][] rotate90Clockwise(int[][] a) {
                    int n = a.length;
                    int[][] result = new int[n][n];
                    for (int i = 0; i < n; i++) {
                        for (int j = 0; j < n; j++) {
                            result[j][n - i - 1] = a[i][j];
                        }
                    }
                    return result;
                }

                private static int[][] rotate180(int[][] a) {
                    int n = a.length;
                    int[][] result = new int[n][n];
                    for (int i = 0; i < n; i++) {
                        for (int j = 0; j < n; j++) {
                            result[n - i - 1][n - j - 1] = a[i][j];
                        }
                    }
                    return result;
                }

                private static int[][] rotate270Clockwise(int[][] a) {
                    int n = a.length;
                    int[][] result = new int[n][n];
                    for (int i = 0; i < n; i++) {
                        for (int j = 0; j < n; j++) {
                            result[n - j - 1][i] = a[i][j];
                        }
                    }
                    return result;
                }
            }