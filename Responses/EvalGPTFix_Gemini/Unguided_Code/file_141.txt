import java.util.Scanner;

    public class Main {
        public static void main(String[] args) {
            Scanner sc = new Scanner(System.in);
            int n = sc.nextInt();
            int[][] a = new int[n][n];
            int[][] b = new int[n][n];
            for(int i = 0; i < n;i++) {
                for(int j = 0; j < n; j++) {
                    a[i][j] = sc.nextInt();
                }
            }
            for(int i = 0; i < n;i++) {
                for(int j = 0; j < n; j++) {
                    b[i][j] = sc.nextInt();
                }
            }

            // Start by assuming matrices don't match
            boolean result = false; 

            // No need to reset 'result' to true in each rotation check
            
            // Check initial orientation
            if(checkMatch(a, b)) {
                result = true; 
            } 

            // Check 90 degree rotation
            if (!result && checkMatch(rotateMatrix(a), b)) {
                result = true;
            } 

            // Check 180 degree rotation
            if (!result && checkMatch(rotateMatrix(rotateMatrix(a)), b)) {
                result = true;
            } 

            // Check 270 degree rotation
            if (!result && checkMatch(rotateMatrix(rotateMatrix(rotateMatrix(a))), b)) {
                result = true;
            } 

            if(result){
                System.out.println("Yes");
            } else {
                System.out.println("No");
            }
        }

        // Function to check if two matrices match
        static boolean checkMatch(int[][] a, int[][] b) {
            for (int i = 0; i < a.length; i++) {
                for (int j = 0; j < a[0].length; j++) {
                    if (a[i][j] == 1 && b[i][j] == 0) {
                        return false; 
                    }
                }
            }
            return true; 
        }

        // Function to rotate a matrix by 90 degrees
        static int[][] rotateMatrix(int[][] matrix) {
            int n = matrix.length;
            int[][] rotated = new int[n][n];
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    rotated[j][n - 1 - i] = matrix[i][j];
                }
            }
            return rotated;
        }
    }