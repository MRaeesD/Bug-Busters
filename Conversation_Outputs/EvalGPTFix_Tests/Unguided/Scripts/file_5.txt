// Java Code
import java.util.*;
import java.lang.*;
import java.io.*;

public class Main {
    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out=new PrintWriter(System.out);
        FastReader sc = new FastReader();
        int testCases=1;

        while(testCases-->0) {
            long s=1;
            int q=sc.nextInt();
            int mod=998244353;
            LinkedList<Pair> st = new LinkedList<>();
            st.add(new Pair(1, 1)); // Store digit 1 with multiplier 1
            long pow=1;
            for(int i=0;i<q;i++) {
                int t=sc.nextInt();
                if(t==1) {
                    int d=sc.nextInt();
                    pow=pow*10%mod;
                    s=s*10%mod;
                    s=(s+d)%mod;
                    st.add(new Pair(d, pow)); // Store digit with its multiplier
                }else if(t==2) {
                    if (!st.isEmpty()) {
                        Pair p = st.poll();
                        long d = p.digit;
                        long multiplier = p.multiplier;
                        s = (s - d * multiplier % mod + mod) % mod; // Use the stored multiplier
                    }
                }else if(t==3) {
                    out.println(s);
                }
            }
        }
        out.close();
    }

    static class Pair {
        int digit;
        long multiplier;
        
        Pair(int digit, long multiplier) {
            this.digit = digit;
            this.multiplier = multiplier;
        }
    }

    public static long power(long a,long b) {
        long res=1;
        int mod=998244353;
        while(b>0) {
            if ((b & 1) == 1) res=(res*a)%mod;
            a=(a*a)%mod;
            b>>=1;
        }
        return res;
    }

    // Other methods remain unchanged...

    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(
                    new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = "";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
}