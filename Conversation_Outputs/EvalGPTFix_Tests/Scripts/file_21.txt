import java.util.*;
import java.io.*;
import java.math.*;

public class Main {
    public static void main(String args[]) throws Exception {
        
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        StringBuilder sb = new StringBuilder();

        while (true) {
            int c = reader.read();
            if (c < '0' || c > '9') break;
            sb.append((char)c);
        }
        
        int Q = Integer.valueOf(sb.toString());
        
        System.out.println(Q);
        long v = 1;
        long mod = 998244353L;
        long b = 1;
        long bx = BigInteger.TEN.modInverse(BigInteger.valueOf(mod)).longValue();
        Deque<Integer> list = new ArrayDeque<>();

        list.add(1);
        for (int i = 0; i < Q; i++) {

            String inputLine = reader.readLine();
            String[] parts = inputLine.split(" ");
            String S = parts[0];

            switch(S.charAt(0)) {
                case '1' :
                    int r = Integer.valueOf(parts[1]);
                    list.add(r);
                    b = (b * 10) % mod;
                    v = (v * 10 + r) % mod;
                    break;
                case '2' :
                    int c = list.poll();
                    v = (v - (b * c) % mod + mod) % mod; // Ensure the entire subtraction is modded
                    b = (b * bx) % mod;
                    break;
                case '3' : 
                    System.out.println(v);
                    break;
            }
        }
        reader.close();
    }
    
    public static String P(List<Object> list) {
        StringBuilder sb = new StringBuilder();
        for (Object x : list) 
            sb.append(x).append(" ");
        return sb.toString().trim();
    }
}