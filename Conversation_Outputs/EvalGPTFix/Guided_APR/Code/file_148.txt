import java.util.Arrays;
import java.util.HashSet;
import java.util.PriorityQueue;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        PriorityQueue<Long> q = new PriorityQueue<>();
        HashSet<Long> hashSet = new HashSet<>();
        long[] a = new long[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextLong();
        }
        
        // Start with an initial sum of 0
        q.offer(0L);
        hashSet.add(0L);

        long result = 0;

        for (int i = 0; i < k; i++) {
            if (q.isEmpty()) {
                break;
            }
            result = q.poll();
            
            // Only iterate over the array for the kth smallest sum
            if (i == k - 1) {
                break;
            }
            
            for (int j = 0; j < n; j++) {
                long temp = result + a[j];
                if (!hashSet.contains(temp)) {
                    q.offer(temp);
                    hashSet.add(temp);
                }
            }
        }
        System.out.println(result);
    }
}