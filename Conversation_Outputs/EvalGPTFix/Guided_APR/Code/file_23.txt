import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StreamTokenizer;
import java.util.ArrayList;
import java.util.List;

public class Main {
    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    private static StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));

    private static int Int() {
        try {
            st.nextToken();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return (int) st.nval;
    }

    public static void main(String[] args) {
        int t = 1;
        long mod = 998244353L;
        long[] bs = new long[600001];
        bs[1] = 1;
        for (int i = 2; i < bs.length; i++) {
            bs[i] = bs[i - 1] * 10;
            bs[i] %= mod;
        }

        while (t-- > 0) {
            int q = Int();
            long ans = 1;
            int chu = 0;
            List<Integer> list = new ArrayList<>();
            list.add(1);
            for (int i = 0; i < q; i++) {
                int k = Int();
                if (k == 1) {
                    int x = Int();
                    list.add(x);
                    ans = (ans * 10 + x) % mod;
                } else if (k == 2) {
                    int le = list.size() - chu;
                    long jian = list.get(chu) * bs[le] % mod;
                    ans = (ans - jian + mod) % mod; // bug fix
                    chu++;
                } else {
                    out.println(ans);
                }
            }
        }
        out.close();
    }
}