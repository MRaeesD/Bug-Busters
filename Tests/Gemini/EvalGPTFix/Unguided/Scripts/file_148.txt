import java.util.Arrays;
    import java.util.HashSet;
    import java.util.PriorityQueue;
    import java.util.Scanner;

    public class Main {
        public static void main(String[] args) {
            Scanner scanner = new Scanner(System.in);
            int n = scanner.nextInt();
            int k = scanner.nextInt();
            PriorityQueue<Long> q = new PriorityQueue<>();
            HashSet<Long> hashSet = new HashSet<>();
            long[] a = new long[n];
            for (int i = 0; i < n; i++) {
                a[i] = scanner.nextLong();
                q.offer(a[i]);
                hashSet.add(a[i]);
            }

            long result = 0;

            for (int i = 0; i < k; i++) {
                if (q.isEmpty()) {
                    break;
                }
                result = q.poll();
                // Optimization: Only calculate and add sums if 'result' is not already present.
                if (!hashSet.contains(2 * result)) { 
                    q.offer(2 * result);
                    hashSet.add(2 * result);
                }
            }
            System.out.println(result);
        }
    }